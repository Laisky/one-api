name: lint

on:
  push:
    branches:
      - "master"
      - "main"
      - "test/ci"
  pull_request:
    branches:
      - "master"
      - "main"

jobs:
  go_tests:
    name: Go unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ^1.25

      - name: Install ffmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      # When you execute your unit tests, make sure to use the "-coverprofile" flag to write a
      # coverage profile to a file. You will need the name of the file (e.g. "coverage.txt")
      # in the next step as well as the next job.
      - name: Test
        run: go test -race -cover -coverprofile=coverage.txt ./...

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: coverage.txt # Make sure to use the same file name you chose for the "-coverprofile" in the "Test" step

  modern_frontend_tests:
    name: Frontend tests (modern)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: web/modern
        run: yarn install --network-timeout 600000

      - name: Run tests
        working-directory: web/modern
        env:
          CI: true
        run: yarn test --run --passWithNoTests

  air_frontend_tests:
    name: Frontend tests (air)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web/air/package-lock.json

      - name: Install dependencies
        working-directory: web/air
        run: yarn install --network-timeout 600000

      - name: Run tests
        working-directory: web/air
        env:
          CI: true
        run: yarn test --watchAll=false --passWithNoTests

  berry_frontend_tests:
    name: Frontend tests (berry)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web/berry/package-lock.json

      - name: Install dependencies
        working-directory: web/berry
        run: yarn install --network-timeout 600000

      - name: Run tests
        working-directory: web/berry
        env:
          CI: true
        run: yarn test --watchAll=false --passWithNoTests

  code_coverage:
    name: "Code coverage report"
    if: github.event_name == 'pull_request' # Do not run when workflow is triggered by push to main branch
    runs-on: ubuntu-latest
    needs: go_tests # Depends on the artifact uploaded by the "go_tests" job
    steps:
      - uses: fgrosse/go-coverage-report@v1.0.2 # Consider using a Git revision for maximum security
        with:
          coverage-artifact-name: "code-coverage" # can be omitted if you used this default value
          coverage-file-name: "coverage.txt" # can be omitted if you used this default value

  # commit_lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: wagoid/commitlint-github-action@v6
