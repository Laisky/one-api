# MCP Tools Usage Guide

This resource provides comprehensive guidance on how to use the One-API MCP tools for generating API documentation.

## Server Information
- **Server Name**: {{.Parameters.ServerName}}
- **Version**: {{.Parameters.ServerVersion}}
- **Base URL**: {{.BaseURL}}

## Available Tools

{{range .Parameters.AvailableTools}}### {{.}}
Use this tool to generate detailed API documentation for the corresponding endpoint.
{{end}}

## How to Use MCP Tools

### 1. Tool-Based Documentation Generation
Each MCP tool generates comprehensive, contextual documentation for specific API endpoints:

#### Chat Completions Tool
```json
{
  "tool": "chat_completions",
  "parameters": {
    "model": "gpt-4",
    "messages": [{"role": "user", "content": "Hello"}],
    "temperature": 0.7,
    "max_tokens": 150
  }
}
```
**Generates**: Complete documentation showing your exact model, messages, and parameters in request examples.

#### Completions Tool
```json
{
  "tool": "completions", 
  "parameters": {
    "model": "gpt-3.5-turbo",
    "prompt": "Write a story about",
    "max_tokens": 100
  }
}
```
**Generates**: Documentation with your specific prompt text and parameter values.

#### Embeddings Tool
```json
{
  "tool": "embeddings",
  "parameters": {
    "model": "text-embedding-ada-002",
    "input": "Text to embed"
  }
}
```
**Generates**: Documentation showing how to embed your specific text.

#### Image Generation Tool
```json
{
  "tool": "images_generations",
  "parameters": {
    "model": "dall-e-3",
    "prompt": "A sunset over mountains",
    "size": "1024x1024",
    "n": 1
  }
}
```
**Generates**: Documentation with your image prompt and generation settings.

#### Audio Tools
```json
{
  "tool": "audio_transcriptions",
  "parameters": {
    "model": "whisper-1",
    "file": "audio.mp3",
    "language": "en"
  }
}
```
**Generates**: Documentation for transcribing your specific audio file.

#### Moderation Tool
```json
{
  "tool": "moderations",
  "parameters": {
    "input": "Text to check for policy violations",
    "model": "text-moderation-latest"
  }
}
```
**Generates**: Documentation for moderating your specific content.

#### Claude Messages Tool
```json
{
  "tool": "claude_messages",
  "parameters": {
    "model": "claude-3-sonnet",
    "messages": [{"role": "user", "content": "Hello Claude"}],
    "max_tokens": 1000
  }
}
```
**Generates**: Documentation for Claude API with your conversation context.

### 2. Dynamic Documentation Benefits

#### Context-Aware Examples
- Request examples show **your actual parameters**
- Parameter descriptions include **your current values**
- Response examples are relevant to **your use case**

#### Personalized Integration Guide
- Endpoint URLs use **your configured base URL**
- Authentication examples with **your setup**
- Parameter explanations with **your specific values**

#### Real-Time Documentation
- Documentation updates as you change parameters
- Always reflects your current configuration
- No static, outdated examples

### 3. Best Practices

#### Parameter Selection
- Use realistic values that match your use case
- Include optional parameters you plan to use
- Test with actual data when possible

#### Documentation Generation
- Generate documentation before implementing
- Update documentation when parameters change
- Share generated docs with your team

#### Integration Workflow
1. **Plan**: Choose the right tool for your API endpoint
2. **Configure**: Set your specific parameters
3. **Generate**: Create comprehensive documentation
4. **Implement**: Use the generated examples and guides
5. **Test**: Verify with the documented parameters

## Advanced Usage

### Instruction Tool
Use the `instructions` tool to get meta-documentation about this MCP server:
- Server capabilities and features
- Complete tool reference
- Integration examples
- Best practices guide

### Resource Access
Access static resources for:
- API endpoint overview
- Authentication guides  
- Error handling references
- Integration patterns

## Support and Integration

### MCP Client Compatibility
This server works with any MCP-compatible client:
- Claude Desktop
- Custom MCP implementations
- API integration tools
- Documentation generators

### Authentication Requirements
All generated documentation includes proper authentication:
- Bearer token examples
- Header format specifications
- Security best practices
- Error handling for auth failures

---
*Generated by {{.Parameters.ServerName}} v{{.Parameters.ServerVersion}}*
